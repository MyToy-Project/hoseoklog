plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.hoseoklog'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // 3.0 이상부터 QueryDSL 설정
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"

    // ascii docs 설정
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:3.0.1'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:3.0.1'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

clean {
    delete file('src/main/generated') // 인텔리제이 Annotation processor 생성물 생성위치
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

asciidoctor {
    inputs.dir snippetsDir
    baseDirFollowsSourceFile()
    configurations 'asciidoctorExt'
    sources {
        include("**/index.adoc")
    }
    dependsOn test
}

// 빌드마다 asciidoc 생성하도록 설정
task createDocument(type: Copy) {
    dependsOn asciidoctor

    from asciidoctor.outputDir
    into file("src/main/resources/static")
}

build {
    dependsOn createDocument
}